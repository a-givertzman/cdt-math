mod kernel;
mod app;
mod algorithm;
#[cfg(test)]
mod tests;
use algorithm::{bearing_choose::user_bearing::user_bearing::UserBearing, dynamic_coefficient::dynamic_coefficient::DynamicCoefficient, hoist_rope_choose::filter::hoist_rope_filter::HoistRopeFilter, hook_choose::user_hook::user_hook::UserHook, lifting_speed::lifting_speed::LiftingSpeed, select_bet_phi::select_bet_phi::SelectBetPhi, storage::storage::Storage, user_select::user_select::UserSelect};
use app::app::App;
use kernel::run::Run;
use debugging::session::debug_session::{Backtrace, DebugSession, LogLevel};
///
/// Application entry point
fn main() {
    DebugSession::init(LogLevel::Debug, Backtrace::Short);
    let path = "config.yaml";
    let mut app = App::new(path);
    if let Err(err) = app.run() {
        log::error!("main | Error: {:#?}", err);
    };

    // Заполнение хранилища пока только крюки
    let mut storage = Storage::new();


    storage.set("конструкции/крюки/тип крюка/крюк однорогий/ИСО/1/грузоподъемность/M1/", Ok(0.4));
    storage.set("конструкции/крюки/тип крюка/крюк однорогий/ИСО/2/грузоподъемность/M1/", Ok(0.5));
    storage.set("конструкции/крюки/тип крюка/крюк однорогий/ИСО/3/грузоподъемность/M1/", Ok(0.63));
    storage.set("конструкции/крюки/тип крюка/крюк однорогий/ИСО/4/грузоподъемность/M1/", Ok(0.8));

    storage.set("конструкции/крюки/тип крюка/крюк однорогий/ИСО/1/диаметр хвостовика/", Ok(12.0));
    storage.set("конструкции/крюки/тип крюка/крюк однорогий/ИСО/2/диаметр хвостовика/", Ok(12.0));
    storage.set("конструкции/крюки/тип крюка/крюк однорогий/ИСО/3/диаметр хвостовика/", Ok(15.0));
    storage.set("конструкции/крюки/тип крюка/крюк однорогий/ИСО/4/диаметр хвостовика/", Ok(17.0));
    
    storage.set("конструкции/крюки/тип крюка/крюк однорогий/ИСО/1/масса заготовки/", Ok(0.2));
    storage.set("конструкции/крюки/тип крюка/крюк однорогий/ИСО/2/масса заготовки/", Ok(0.25));
    storage.set("конструкции/крюки/тип крюка/крюк однорогий/ИСО/3/масса заготовки/", Ok(0.4));
    storage.set("конструкции/крюки/тип крюка/крюк однорогий/ИСО/4/масса заготовки/", Ok(0.6));

    storage.set("конструкции/подшипники/название/8100Н/статическая грузоподъемность/", Ok(11800.0));
    storage.set("конструкции/подшипники/название/8101Н/статическая грузоподъемность/", Ok(12900.0));
    storage.set("конструкции/подшипники/название/8100Н/наружный диаметр/", Ok(24.0));
    storage.set("конструкции/подшипники/название/8101Н/наружный диаметр/", Ok(26.0));

    storage.set("конструкции/подшипники/название/8102Н/статическая грузоподъемность/", Ok(14000.0));
    storage.set("конструкции/подшипники/название/8103Н/статическая грузоподъемность/", Ok(16600.0));
    storage.set("конструкции/подшипники/название/8102Н/наружный диаметр/", Ok(28.0));
    storage.set("конструкции/подшипники/название/8103Н/наружный диаметр/", Ok(30.0));

    storage.set("конструкции/подшипники/название/8104Н/статическая грузоподъемность/", Ok(22400.0));
    storage.set("конструкции/подшипники/название/8105Н/статическая грузоподъемность/", Ok(30000.0));
    storage.set("конструкции/подшипники/название/8104Н/наружный диаметр/", Ok(35.0));
    storage.set("конструкции/подшипники/название/8105Н/наружный диаметр/", Ok(42.0));

    storage.set("конструкции/подшипники/название/8106Н/статическая грузоподъемность/", Ok(33500.0));
    storage.set("конструкции/подшипники/название/8107Н/статическая грузоподъемность/", Ok(39000.0));
    storage.set("конструкции/подшипники/название/8106Н/наружный диаметр/", Ok(47.0));
    storage.set("конструкции/подшипники/название/8107Н/наружный диаметр/", Ok(52.0));

    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/1/диаметр каната/", Ok(12.0));
    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/2/диаметр каната/", Ok(13.0));
    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/3/диаметр каната/", Ok(14.0));
    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/4/диаметр каната/", Ok(15.0));

    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/1/масса каната/", Ok(0.688));
    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/2/масса каната/", Ok(0.808));
    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/3/масса каната/", Ok(0.93));
    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/4/масса каната/", Ok(1.067));

    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/1/площадь сечения каната/", Ok(67.824));
    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/2/площадь сечения каната/", Ok(79.599));
    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/3/площадь сечения каната/", Ok(92.316));
    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/4/площадь сечения каната/", Ok(105.975));

    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/1/удельная масса каната/", Ok(0.688));
    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/2/удельная масса каната/", Ok(0.808));
    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/3/удельная масса каната/", Ok(0.93));
    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/4/удельная масса каната/", Ok(1.067));

    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/1/разрывное усилие/1770/", Ok(112.0));
    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/1/разрывное усилие/1860/", Ok(118.0));
    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/1/разрывное усилие/1960/", Ok(124.0));
    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/1/разрывное усилие/2160/", Ok(129.0));
    
    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/1/способ свивки каната/", Err("нераскручивающийся".to_string()));
    storage.set("конструкции/канат/тип сердечника/металлический/СТО 71915393-ТУ 051-2014 Октопус 826K/1/степень уравновешенности/", Err("рихтованный".to_string()));


    

    //Заполнение хранилища выбор пользователя
    let mut user_select_storage = Storage::new();

    user_select_storage.set("конструкции/крюк/грузоподъемность/",Ok(0.1));
    user_select_storage.set("конструкции/крюк/класс подъема/",Err("HC3".to_string()));
    user_select_storage.set("конструкции/крюк/комбинация нагрузок/",Err("A1".to_string()));
    user_select_storage.set("конструкции/крюк/тип привода/",Err("HD3".to_string()));
    user_select_storage.set("конструкции/крюк/номинальная скорость подъема механизма/",Ok(1.0));
    user_select_storage.set("конструкции/крюк/замедленная скорость подъема механизма/",Ok(1.0));
    user_select_storage.set("конструкции/крюк/режим работы механизма/",Err("M1".to_string()));
    user_select_storage.set("конструкции/крюк/тип крюка/", Err("крюк однорогий".to_string()));
    user_select_storage.set("конструкции/крюк/тип грузозахватного органа механизма подъёма/",Err("съёмный электрогидравлический грейфер".to_string()));
    user_select_storage.set("конструкции/крюк/грузоподъемность грузозахватного органа механизма подъёма/",Ok(0.3));

    user_select_storage.set("конструкции/канат/сочетание направлений свивки элементов каната/",Err("крестовая".to_string()));
    user_select_storage.set("конструкции/канат/способ свивки каната/",Err("нераскручивающийся".to_string()));
    user_select_storage.set("конструкции/канат/точность изготовления каната/",Err("нормальная".to_string()));
    user_select_storage.set("конструкции/канат/степень уравновешенности каната/", Err("рихтованный".to_string()));
    user_select_storage.set("конструкции/канат/тип сердечника/", Err("металлический".to_string()));
    user_select_storage.set("конструкции/канат/диаметр каната/", Ok(12.0));
    user_select_storage.set("конструкции/канат/количество отклоняющих блоков для полиспаста/", Ok(1.0));
    user_select_storage.set("конструкции/канат/количество канатов маркировочной группы/", Ok(5.0));



    user_select_storage.set("конструкции/кран/ветровой район расположения крана/", Err("0".to_string()));
    user_select_storage.set("конструкции/кран/тип рабочей среды крана/", Err("обычная".to_string()));
    user_select_storage.set("конструкции/кран/режим работы крана/", Err("0".to_string()));
    

    //Запрос пользователя
    let user_select: UserSelect = UserSelect::new(&user_select_storage);

    //Крюк выбранный пользователем
    let mut user_hook: UserHook = UserHook::new();  
    user_hook.eval(&user_select, &mut storage);

    //Подшипник выбранный пользователем
    let mut user_bearing: UserBearing = UserBearing::new();
    user_bearing.eval(&user_hook, &user_select, &mut storage, DynamicCoefficient::new(SelectBetPhi::new(user_select.lift_class.clone()), LiftingSpeed::new(user_select.drive_type.clone(), user_select.load_comb.clone(), user_select.vhmax, user_select.vhcs)));

    user_hook.user_hook.print();
    user_bearing.user_bearing.print();

    //Фильтрация канатов
    let filtered_hoist_ropes = HoistRopeFilter::new().filter(&mut storage, user_select.m_to_lift, user_hook.user_hook.sum_good_weights.summary_weight, user_select.rejecting_blocks, user_select.mechanism_work_type, user_select.hoist_rope_core_type, user_select.hoist_rope_diametr, user_select.hoist_rope_twisting_method, user_select.hoist_rope_balance_degree);


}
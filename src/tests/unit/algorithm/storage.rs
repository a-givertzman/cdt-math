#[cfg(test)]

mod user_select {
    use crate::{kernel::entities::value::Value, Storage};
    use debugging::session::debug_session::{Backtrace, DebugSession, LogLevel};
    use std::{
        sync::Once,
        time::{Duration, Instant},
    };
    use testing::stuff::max_test_duration::TestDuration;
    ///
    ///
    static INIT: Once = Once::new();
    ///
    /// once called initialisation
    fn init_once() {
        INIT.call_once(|| {
            // implement your initialisation code to be called only once for current test file
        })
    }
    ///
    /// returns:
    ///  - ...
    fn init_each() -> () {}
    ///
    /// Testing such functionality / behavior
    #[test]
    fn get_set() {
        DebugSession::init(LogLevel::Info, Backtrace::Short);
        init_once();
        init_each();
        log::debug!("");
        let self_id = "test";
        log::debug!("\n{}", self_id);
        let test_duration = TestDuration::new(self_id, Duration::from_secs(1));
        test_duration.run().unwrap();

        let mut storage = Storage::new();

        storage.set(
            "конструкции/крюки/тип крюка/крюк однорогий/ИСО/1/грузоподъемность/M1/",
            Ok(0.4),
        );
        storage.set(
            "конструкции/крюки/тип крюка/крюк однорогий/ИСО/2/грузоподъемность/M1/",
            Ok(0.5),
        );
        storage.set(
            "конструкции/крюки/тип крюка/крюк однорогий/ИСО/3/грузоподъемность/M1/",
            Ok(0.63),
        );
        storage.set(
            "конструкции/крюки/тип крюка/крюк однорогий/ИСО/4/грузоподъемность/M1/",
            Ok(0.8),
        );

        storage.set(
            "конструкции/крюки/тип крюка/крюк однорогий/ИСО/1/диаметр хвостовика/",
            Ok(12.0),
        );
        storage.set(
            "конструкции/крюки/тип крюка/крюк однорогий/ИСО/2/диаметр хвостовика/",
            Ok(12.0),
        );
        storage.set(
            "конструкции/крюки/тип крюка/крюк однорогий/ИСО/3/диаметр хвостовика/",
            Ok(15.0),
        );
        storage.set(
            "конструкции/крюки/тип крюка/крюк однорогий/ИСО/4/диаметр хвостовика/",
            Ok(17.0),
        );

        storage.set(
            "конструкции/крюки/тип крюка/крюк однорогий/ИСО/1/масса заготовки/",
            Ok(0.2),
        );
        storage.set(
            "конструкции/крюки/тип крюка/крюк однорогий/ИСО/2/масса заготовки/",
            Ok(0.25),
        );
        storage.set(
            "конструкции/крюки/тип крюка/крюк однорогий/ИСО/3/масса заготовки/",
            Ok(0.4),
        );
        storage.set(
            "конструкции/крюки/тип крюка/крюк однорогий/ИСО/4/масса заготовки/",
            Ok(0.6),
        );

        storage.set(
            "конструкции/подшипники/название/8100Н/статическая грузоподъемность/",
            Ok(11800.0),
        );
        storage.set(
            "конструкции/подшипники/название/8101Н/статическая грузоподъемность/",
            Ok(12900.0),
        );
        storage.set(
            "конструкции/подшипники/название/8100Н/наружный диаметр/",
            Ok(24.0),
        );
        storage.set(
            "конструкции/подшипники/название/8101Н/наружный диаметр/",
            Ok(26.0),
        );

        storage.set(
            "конструкции/подшипники/название/8102Н/статическая грузоподъемность/",
            Ok(14000.0),
        );
        storage.set(
            "конструкции/подшипники/название/8103Н/статическая грузоподъемность/",
            Ok(16600.0),
        );
        storage.set(
            "конструкции/подшипники/название/8102Н/наружный диаметр/",
            Ok(28.0),
        );
        storage.set(
            "конструкции/подшипники/название/8103Н/наружный диаметр/",
            Ok(30.0),
        );

        storage.set(
            "конструкции/подшипники/название/8104Н/статическая грузоподъемность/",
            Ok(22400.0),
        );
        storage.set(
            "конструкции/подшипники/название/8105Н/статическая грузоподъемность/",
            Ok(30000.0),
        );
        storage.set(
            "конструкции/подшипники/название/8104Н/наружный диаметр/",
            Ok(35.0),
        );
        storage.set(
            "конструкции/подшипники/название/8105Н/наружный диаметр/",
            Ok(42.0),
        );

        storage.set(
            "конструкции/подшипники/название/8106Н/статическая грузоподъемность/",
            Ok(33500.0),
        );
        storage.set(
            "конструкции/подшипники/название/8107Н/статическая грузоподъемность/",
            Ok(39000.0),
        );
        storage.set(
            "конструкции/подшипники/название/8106Н/наружный диаметр/",
            Ok(47.0),
        );
        storage.set(
            "конструкции/подшипники/название/8107Н/наружный диаметр/",
            Ok(52.0),
        );

        let test_data = [
            (
                ("конструкции/крюки/тип крюка/крюк однорогий/ИСО/1/грузоподъемность/M1/"),
                0.4,
            ),
            (
                ("конструкции/крюки/тип крюка/крюк однорогий/ИСО/2/грузоподъемность/M1/"),
                0.5,
            ),
            (
                ("конструкции/крюки/тип крюка/крюк однорогий/ИСО/3/грузоподъемность/M1/"),
                0.63,
            ),
            (
                ("конструкции/крюки/тип крюка/крюк однорогий/ИСО/4/грузоподъемность/M1/"),
                0.8,
            ),
        ];

        for (value, target) in test_data.into_iter() {
            if let Some(value) = storage.get(value) {
                if let Value::Data(data) = value {
                    assert!(*data == target, "result: {:?}\ntarget: {:?}", data, target);
                }
            }
        }

        test_duration.exit();
    }
}